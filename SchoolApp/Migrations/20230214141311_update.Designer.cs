// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SchoolApp.Database;

#nullable disable

namespace SchoolApp.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230214141311_update")]
    partial class update
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SchoolApp.Features.Assignments.Models.AssignmentModel", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("text");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DeadLine")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Grade")
                        .HasColumnType("numeric");

                    b.Property<string>("Subjectid")
                        .HasColumnType("text");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("id");

                    b.HasIndex("Subjectid");

                    b.ToTable("Assignments");
                });

            modelBuilder.Entity("SchoolApp.Features.Assignments.Models.SubjectModel", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("text");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProffesorMail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("id");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("SchoolApp.Features.Assignments.Models.TestModel", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("text");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Grade")
                        .HasColumnType("numeric");

                    b.Property<string>("Subjectid")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("id");

                    b.HasIndex("Subjectid");

                    b.ToTable("Tests");
                });

            modelBuilder.Entity("SchoolApp.Features.Assignments.Models.AssignmentModel", b =>
                {
                    b.HasOne("SchoolApp.Features.Assignments.Models.SubjectModel", "Subject")
                        .WithMany("Assignments")
                        .HasForeignKey("Subjectid");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("SchoolApp.Features.Assignments.Models.TestModel", b =>
                {
                    b.HasOne("SchoolApp.Features.Assignments.Models.SubjectModel", "Subject")
                        .WithMany("Tests")
                        .HasForeignKey("Subjectid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("SchoolApp.Features.Assignments.Models.SubjectModel", b =>
                {
                    b.Navigation("Assignments");

                    b.Navigation("Tests");
                });
#pragma warning restore 612, 618
        }
    }
}
